/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as CoinsCoinIdImport } from './routes/coins.$coinId';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const CoinsCoinIdRoute = CoinsCoinIdImport.update({
  path: '/coins/$coinId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/coins.$coinId.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/coins/$coinId': {
      id: '/coins/$coinId';
      path: '/coins/$coinId';
      fullPath: '/coins/$coinId';
      preLoaderRoute: typeof CoinsCoinIdImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/coins/$coinId': typeof CoinsCoinIdRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/coins/$coinId': typeof CoinsCoinIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/coins/$coinId': typeof CoinsCoinIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/coins/$coinId';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/coins/$coinId';
  id: '__root__' | '/' | '/coins/$coinId';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  AboutLazyRoute: typeof AboutLazyRoute;
  CoinsCoinIdRoute: typeof CoinsCoinIdRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  CoinsCoinIdRoute: CoinsCoinIdRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/coins/$coinId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/coins/$coinId": {
      "filePath": "coins.$coinId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
